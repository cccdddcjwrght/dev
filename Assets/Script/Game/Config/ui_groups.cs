// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace GameConfigs
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct ui_groupsRowData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static ui_groupsRowData GetRootAsui_groupsRowData(ByteBuffer _bb) { return GetRootAsui_groupsRowData(_bb, new ui_groupsRowData()); }
  public static ui_groupsRowData GetRootAsui_groupsRowData(ByteBuffer _bb, ui_groupsRowData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ui_groupsRowData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Desc { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetDescArray() { return __p.__vector_as_array<byte>(6); }
  public int Type { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<GameConfigs.ui_groupsRowData> Createui_groupsRowData(FlatBufferBuilder builder,
      int id = 0,
      StringOffset descOffset = default(StringOffset),
      int type = 0) {
    builder.StartTable(3);
    ui_groupsRowData.AddType(builder, type);
    ui_groupsRowData.AddDesc(builder, descOffset);
    ui_groupsRowData.AddId(builder, id);
    return ui_groupsRowData.Endui_groupsRowData(builder);
  }

  public static void Startui_groupsRowData(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset descOffset) { builder.AddOffset(1, descOffset.Value, 0); }
  public static void AddType(FlatBufferBuilder builder, int type) { builder.AddInt(2, type, 0); }
  public static Offset<GameConfigs.ui_groupsRowData> Endui_groupsRowData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GameConfigs.ui_groupsRowData>(o);
  }
};

public struct ui_groups : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static ui_groups GetRootAsui_groups(ByteBuffer _bb) { return GetRootAsui_groups(_bb, new ui_groups()); }
  public static ui_groups GetRootAsui_groups(ByteBuffer _bb, ui_groups obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ui_groups __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GameConfigs.ui_groupsRowData? Datalist(int j) { int o = __p.__offset(4); return o != 0 ? (GameConfigs.ui_groupsRowData?)(new GameConfigs.ui_groupsRowData()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int DatalistLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<GameConfigs.ui_groups> Createui_groups(FlatBufferBuilder builder,
      VectorOffset datalistOffset = default(VectorOffset)) {
    builder.StartTable(1);
    ui_groups.AddDatalist(builder, datalistOffset);
    return ui_groups.Endui_groups(builder);
  }

  public static void Startui_groups(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddDatalist(FlatBufferBuilder builder, VectorOffset datalistOffset) { builder.AddOffset(0, datalistOffset.Value, 0); }
  public static VectorOffset CreateDatalistVector(FlatBufferBuilder builder, Offset<GameConfigs.ui_groupsRowData>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateDatalistVectorBlock(FlatBufferBuilder builder, Offset<GameConfigs.ui_groupsRowData>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartDatalistVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<GameConfigs.ui_groups> Endui_groups(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GameConfigs.ui_groups>(o);
  }
  public static void Finishui_groupsBuffer(FlatBufferBuilder builder, Offset<GameConfigs.ui_groups> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedui_groupsBuffer(FlatBufferBuilder builder, Offset<GameConfigs.ui_groups> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
