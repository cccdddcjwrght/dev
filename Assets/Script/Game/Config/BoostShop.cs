// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace GameConfigs
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct BoostShopRowData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static BoostShopRowData GetRootAsBoostShopRowData(ByteBuffer _bb) { return GetRootAsBoostShopRowData(_bb, new BoostShopRowData()); }
  public static BoostShopRowData GetRootAsBoostShopRowData(ByteBuffer _bb, BoostShopRowData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public BoostShopRowData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Type { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int BuffId(int j) { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int BuffIdLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetBuffIdBytes() { return __p.__vector_as_span<int>(8, 4); }
#else
  public ArraySegment<byte>? GetBuffIdBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public int[] GetBuffIdArray() { return __p.__vector_as_array<int>(8); }
  public int BuffTime { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Weight { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string BuffDes { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBuffDesBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetBuffDesBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetBuffDesArray() { return __p.__vector_as_array<byte>(14); }
  public int ShopId { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<GameConfigs.BoostShopRowData> CreateBoostShopRowData(FlatBufferBuilder builder,
      int Id = 0,
      int Type = 0,
      VectorOffset BuffIdOffset = default(VectorOffset),
      int BuffTime = 0,
      int Weight = 0,
      StringOffset BuffDesOffset = default(StringOffset),
      int ShopId = 0) {
    builder.StartTable(7);
    BoostShopRowData.AddShopId(builder, ShopId);
    BoostShopRowData.AddBuffDes(builder, BuffDesOffset);
    BoostShopRowData.AddWeight(builder, Weight);
    BoostShopRowData.AddBuffTime(builder, BuffTime);
    BoostShopRowData.AddBuffId(builder, BuffIdOffset);
    BoostShopRowData.AddType(builder, Type);
    BoostShopRowData.AddId(builder, Id);
    return BoostShopRowData.EndBoostShopRowData(builder);
  }

  public static void StartBoostShopRowData(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddId(FlatBufferBuilder builder, int Id) { builder.AddInt(0, Id, 0); }
  public static void AddType(FlatBufferBuilder builder, int Type) { builder.AddInt(1, Type, 0); }
  public static void AddBuffId(FlatBufferBuilder builder, VectorOffset BuffIdOffset) { builder.AddOffset(2, BuffIdOffset.Value, 0); }
  public static VectorOffset CreateBuffIdVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateBuffIdVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartBuffIdVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBuffTime(FlatBufferBuilder builder, int BuffTime) { builder.AddInt(3, BuffTime, 0); }
  public static void AddWeight(FlatBufferBuilder builder, int Weight) { builder.AddInt(4, Weight, 0); }
  public static void AddBuffDes(FlatBufferBuilder builder, StringOffset BuffDesOffset) { builder.AddOffset(5, BuffDesOffset.Value, 0); }
  public static void AddShopId(FlatBufferBuilder builder, int ShopId) { builder.AddInt(6, ShopId, 0); }
  public static Offset<GameConfigs.BoostShopRowData> EndBoostShopRowData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GameConfigs.BoostShopRowData>(o);
  }
};

public struct BoostShop : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static BoostShop GetRootAsBoostShop(ByteBuffer _bb) { return GetRootAsBoostShop(_bb, new BoostShop()); }
  public static BoostShop GetRootAsBoostShop(ByteBuffer _bb, BoostShop obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public BoostShop __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GameConfigs.BoostShopRowData? Datalist(int j) { int o = __p.__offset(4); return o != 0 ? (GameConfigs.BoostShopRowData?)(new GameConfigs.BoostShopRowData()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int DatalistLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<GameConfigs.BoostShop> CreateBoostShop(FlatBufferBuilder builder,
      VectorOffset datalistOffset = default(VectorOffset)) {
    builder.StartTable(1);
    BoostShop.AddDatalist(builder, datalistOffset);
    return BoostShop.EndBoostShop(builder);
  }

  public static void StartBoostShop(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddDatalist(FlatBufferBuilder builder, VectorOffset datalistOffset) { builder.AddOffset(0, datalistOffset.Value, 0); }
  public static VectorOffset CreateDatalistVector(FlatBufferBuilder builder, Offset<GameConfigs.BoostShopRowData>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateDatalistVectorBlock(FlatBufferBuilder builder, Offset<GameConfigs.BoostShopRowData>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartDatalistVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<GameConfigs.BoostShop> EndBoostShop(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GameConfigs.BoostShop>(o);
  }
  public static void FinishBoostShopBuffer(FlatBufferBuilder builder, Offset<GameConfigs.BoostShop> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedBoostShopBuffer(FlatBufferBuilder builder, Offset<GameConfigs.BoostShop> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
