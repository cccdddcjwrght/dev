// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace GameConfigs
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct Likes_RewardsRowData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static Likes_RewardsRowData GetRootAsLikes_RewardsRowData(ByteBuffer _bb) { return GetRootAsLikes_RewardsRowData(_bb, new Likes_RewardsRowData()); }
  public static Likes_RewardsRowData GetRootAsLikes_RewardsRowData(ByteBuffer _bb, Likes_RewardsRowData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Likes_RewardsRowData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ResultShow(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ResultShowLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetResultShowBytes() { return __p.__vector_as_span<int>(6, 4); }
#else
  public ArraySegment<byte>? GetResultShowBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public int[] GetResultShowArray() { return __p.__vector_as_array<int>(6); }
  public int ResultType { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ConditionType { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ConditionValue { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Weight { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Reward(int j) { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int RewardLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetRewardBytes() { return __p.__vector_as_span<int>(16, 4); }
#else
  public ArraySegment<byte>? GetRewardBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public int[] GetRewardArray() { return __p.__vector_as_array<int>(16); }

  public static Offset<GameConfigs.Likes_RewardsRowData> CreateLikes_RewardsRowData(FlatBufferBuilder builder,
      int Id = 0,
      VectorOffset ResultShowOffset = default(VectorOffset),
      int ResultType = 0,
      int ConditionType = 0,
      int ConditionValue = 0,
      int Weight = 0,
      VectorOffset RewardOffset = default(VectorOffset)) {
    builder.StartTable(7);
    Likes_RewardsRowData.AddReward(builder, RewardOffset);
    Likes_RewardsRowData.AddWeight(builder, Weight);
    Likes_RewardsRowData.AddConditionValue(builder, ConditionValue);
    Likes_RewardsRowData.AddConditionType(builder, ConditionType);
    Likes_RewardsRowData.AddResultType(builder, ResultType);
    Likes_RewardsRowData.AddResultShow(builder, ResultShowOffset);
    Likes_RewardsRowData.AddId(builder, Id);
    return Likes_RewardsRowData.EndLikes_RewardsRowData(builder);
  }

  public static void StartLikes_RewardsRowData(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddId(FlatBufferBuilder builder, int Id) { builder.AddInt(0, Id, 0); }
  public static void AddResultShow(FlatBufferBuilder builder, VectorOffset ResultShowOffset) { builder.AddOffset(1, ResultShowOffset.Value, 0); }
  public static VectorOffset CreateResultShowVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateResultShowVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartResultShowVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResultType(FlatBufferBuilder builder, int ResultType) { builder.AddInt(2, ResultType, 0); }
  public static void AddConditionType(FlatBufferBuilder builder, int ConditionType) { builder.AddInt(3, ConditionType, 0); }
  public static void AddConditionValue(FlatBufferBuilder builder, int ConditionValue) { builder.AddInt(4, ConditionValue, 0); }
  public static void AddWeight(FlatBufferBuilder builder, int Weight) { builder.AddInt(5, Weight, 0); }
  public static void AddReward(FlatBufferBuilder builder, VectorOffset RewardOffset) { builder.AddOffset(6, RewardOffset.Value, 0); }
  public static VectorOffset CreateRewardVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateRewardVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartRewardVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<GameConfigs.Likes_RewardsRowData> EndLikes_RewardsRowData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GameConfigs.Likes_RewardsRowData>(o);
  }
};

public struct Likes_Rewards : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static Likes_Rewards GetRootAsLikes_Rewards(ByteBuffer _bb) { return GetRootAsLikes_Rewards(_bb, new Likes_Rewards()); }
  public static Likes_Rewards GetRootAsLikes_Rewards(ByteBuffer _bb, Likes_Rewards obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Likes_Rewards __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GameConfigs.Likes_RewardsRowData? Datalist(int j) { int o = __p.__offset(4); return o != 0 ? (GameConfigs.Likes_RewardsRowData?)(new GameConfigs.Likes_RewardsRowData()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int DatalistLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<GameConfigs.Likes_Rewards> CreateLikes_Rewards(FlatBufferBuilder builder,
      VectorOffset datalistOffset = default(VectorOffset)) {
    builder.StartTable(1);
    Likes_Rewards.AddDatalist(builder, datalistOffset);
    return Likes_Rewards.EndLikes_Rewards(builder);
  }

  public static void StartLikes_Rewards(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddDatalist(FlatBufferBuilder builder, VectorOffset datalistOffset) { builder.AddOffset(0, datalistOffset.Value, 0); }
  public static VectorOffset CreateDatalistVector(FlatBufferBuilder builder, Offset<GameConfigs.Likes_RewardsRowData>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateDatalistVectorBlock(FlatBufferBuilder builder, Offset<GameConfigs.Likes_RewardsRowData>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartDatalistVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<GameConfigs.Likes_Rewards> EndLikes_Rewards(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GameConfigs.Likes_Rewards>(o);
  }
  public static void FinishLikes_RewardsBuffer(FlatBufferBuilder builder, Offset<GameConfigs.Likes_Rewards> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedLikes_RewardsBuffer(FlatBufferBuilder builder, Offset<GameConfigs.Likes_Rewards> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
