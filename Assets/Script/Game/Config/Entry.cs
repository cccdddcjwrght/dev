// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace GameConfigs
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct EntryRowData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static EntryRowData GetRootAsEntryRowData(ByteBuffer _bb) { return GetRootAsEntryRowData(_bb, new EntryRowData()); }
  public static EntryRowData GetRootAsEntryRowData(ByteBuffer _bb, EntryRowData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EntryRowData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Weight1(int j) { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int Weight1Length { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetWeight1Bytes() { return __p.__vector_as_span<int>(6, 4); }
#else
  public ArraySegment<byte>? GetWeight1Bytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public int[] GetWeight1Array() { return __p.__vector_as_array<int>(6); }
  public int Buff1(int j) { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int Buff1Length { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetBuff1Bytes() { return __p.__vector_as_span<int>(8, 4); }
#else
  public ArraySegment<byte>? GetBuff1Bytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public int[] GetBuff1Array() { return __p.__vector_as_array<int>(8); }
  public int Weight2(int j) { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int Weight2Length { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetWeight2Bytes() { return __p.__vector_as_span<int>(10, 4); }
#else
  public ArraySegment<byte>? GetWeight2Bytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public int[] GetWeight2Array() { return __p.__vector_as_array<int>(10); }
  public int Buff2(int j) { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int Buff2Length { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetBuff2Bytes() { return __p.__vector_as_span<int>(12, 4); }
#else
  public ArraySegment<byte>? GetBuff2Bytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public int[] GetBuff2Array() { return __p.__vector_as_array<int>(12); }
  public int Weight3(int j) { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int Weight3Length { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetWeight3Bytes() { return __p.__vector_as_span<int>(14, 4); }
#else
  public ArraySegment<byte>? GetWeight3Bytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public int[] GetWeight3Array() { return __p.__vector_as_array<int>(14); }
  public int Buff3(int j) { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int Buff3Length { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetBuff3Bytes() { return __p.__vector_as_span<int>(16, 4); }
#else
  public ArraySegment<byte>? GetBuff3Bytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public int[] GetBuff3Array() { return __p.__vector_as_array<int>(16); }
  public int Weight4(int j) { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int Weight4Length { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetWeight4Bytes() { return __p.__vector_as_span<int>(18, 4); }
#else
  public ArraySegment<byte>? GetWeight4Bytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public int[] GetWeight4Array() { return __p.__vector_as_array<int>(18); }
  public int Buff4(int j) { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int Buff4Length { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetBuff4Bytes() { return __p.__vector_as_span<int>(20, 4); }
#else
  public ArraySegment<byte>? GetBuff4Bytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public int[] GetBuff4Array() { return __p.__vector_as_array<int>(20); }
  public int Weight5(int j) { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int Weight5Length { get { int o = __p.__offset(22); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetWeight5Bytes() { return __p.__vector_as_span<int>(22, 4); }
#else
  public ArraySegment<byte>? GetWeight5Bytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public int[] GetWeight5Array() { return __p.__vector_as_array<int>(22); }
  public int Buff5(int j) { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int Buff5Length { get { int o = __p.__offset(24); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetBuff5Bytes() { return __p.__vector_as_span<int>(24, 4); }
#else
  public ArraySegment<byte>? GetBuff5Bytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public int[] GetBuff5Array() { return __p.__vector_as_array<int>(24); }
  public int Weight6(int j) { int o = __p.__offset(26); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int Weight6Length { get { int o = __p.__offset(26); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetWeight6Bytes() { return __p.__vector_as_span<int>(26, 4); }
#else
  public ArraySegment<byte>? GetWeight6Bytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public int[] GetWeight6Array() { return __p.__vector_as_array<int>(26); }
  public int Buff6(int j) { int o = __p.__offset(28); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int Buff6Length { get { int o = __p.__offset(28); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetBuff6Bytes() { return __p.__vector_as_span<int>(28, 4); }
#else
  public ArraySegment<byte>? GetBuff6Bytes() { return __p.__vector_as_arraysegment(28); }
#endif
  public int[] GetBuff6Array() { return __p.__vector_as_array<int>(28); }
  public int Weight7(int j) { int o = __p.__offset(30); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int Weight7Length { get { int o = __p.__offset(30); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetWeight7Bytes() { return __p.__vector_as_span<int>(30, 4); }
#else
  public ArraySegment<byte>? GetWeight7Bytes() { return __p.__vector_as_arraysegment(30); }
#endif
  public int[] GetWeight7Array() { return __p.__vector_as_array<int>(30); }
  public int Buff7(int j) { int o = __p.__offset(32); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int Buff7Length { get { int o = __p.__offset(32); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetBuff7Bytes() { return __p.__vector_as_span<int>(32, 4); }
#else
  public ArraySegment<byte>? GetBuff7Bytes() { return __p.__vector_as_arraysegment(32); }
#endif
  public int[] GetBuff7Array() { return __p.__vector_as_array<int>(32); }
  public int Weight8(int j) { int o = __p.__offset(34); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int Weight8Length { get { int o = __p.__offset(34); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetWeight8Bytes() { return __p.__vector_as_span<int>(34, 4); }
#else
  public ArraySegment<byte>? GetWeight8Bytes() { return __p.__vector_as_arraysegment(34); }
#endif
  public int[] GetWeight8Array() { return __p.__vector_as_array<int>(34); }
  public int Buff8(int j) { int o = __p.__offset(36); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int Buff8Length { get { int o = __p.__offset(36); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetBuff8Bytes() { return __p.__vector_as_span<int>(36, 4); }
#else
  public ArraySegment<byte>? GetBuff8Bytes() { return __p.__vector_as_arraysegment(36); }
#endif
  public int[] GetBuff8Array() { return __p.__vector_as_array<int>(36); }
  public int Weight9(int j) { int o = __p.__offset(38); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int Weight9Length { get { int o = __p.__offset(38); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetWeight9Bytes() { return __p.__vector_as_span<int>(38, 4); }
#else
  public ArraySegment<byte>? GetWeight9Bytes() { return __p.__vector_as_arraysegment(38); }
#endif
  public int[] GetWeight9Array() { return __p.__vector_as_array<int>(38); }
  public int Buff9(int j) { int o = __p.__offset(40); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int Buff9Length { get { int o = __p.__offset(40); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetBuff9Bytes() { return __p.__vector_as_span<int>(40, 4); }
#else
  public ArraySegment<byte>? GetBuff9Bytes() { return __p.__vector_as_arraysegment(40); }
#endif
  public int[] GetBuff9Array() { return __p.__vector_as_array<int>(40); }

  public static Offset<GameConfigs.EntryRowData> CreateEntryRowData(FlatBufferBuilder builder,
      int Id = 0,
      VectorOffset Weight1Offset = default(VectorOffset),
      VectorOffset Buff1Offset = default(VectorOffset),
      VectorOffset Weight2Offset = default(VectorOffset),
      VectorOffset Buff2Offset = default(VectorOffset),
      VectorOffset Weight3Offset = default(VectorOffset),
      VectorOffset Buff3Offset = default(VectorOffset),
      VectorOffset Weight4Offset = default(VectorOffset),
      VectorOffset Buff4Offset = default(VectorOffset),
      VectorOffset Weight5Offset = default(VectorOffset),
      VectorOffset Buff5Offset = default(VectorOffset),
      VectorOffset Weight6Offset = default(VectorOffset),
      VectorOffset Buff6Offset = default(VectorOffset),
      VectorOffset Weight7Offset = default(VectorOffset),
      VectorOffset Buff7Offset = default(VectorOffset),
      VectorOffset Weight8Offset = default(VectorOffset),
      VectorOffset Buff8Offset = default(VectorOffset),
      VectorOffset Weight9Offset = default(VectorOffset),
      VectorOffset Buff9Offset = default(VectorOffset)) {
    builder.StartTable(19);
    EntryRowData.AddBuff9(builder, Buff9Offset);
    EntryRowData.AddWeight9(builder, Weight9Offset);
    EntryRowData.AddBuff8(builder, Buff8Offset);
    EntryRowData.AddWeight8(builder, Weight8Offset);
    EntryRowData.AddBuff7(builder, Buff7Offset);
    EntryRowData.AddWeight7(builder, Weight7Offset);
    EntryRowData.AddBuff6(builder, Buff6Offset);
    EntryRowData.AddWeight6(builder, Weight6Offset);
    EntryRowData.AddBuff5(builder, Buff5Offset);
    EntryRowData.AddWeight5(builder, Weight5Offset);
    EntryRowData.AddBuff4(builder, Buff4Offset);
    EntryRowData.AddWeight4(builder, Weight4Offset);
    EntryRowData.AddBuff3(builder, Buff3Offset);
    EntryRowData.AddWeight3(builder, Weight3Offset);
    EntryRowData.AddBuff2(builder, Buff2Offset);
    EntryRowData.AddWeight2(builder, Weight2Offset);
    EntryRowData.AddBuff1(builder, Buff1Offset);
    EntryRowData.AddWeight1(builder, Weight1Offset);
    EntryRowData.AddId(builder, Id);
    return EntryRowData.EndEntryRowData(builder);
  }

  public static void StartEntryRowData(FlatBufferBuilder builder) { builder.StartTable(19); }
  public static void AddId(FlatBufferBuilder builder, int Id) { builder.AddInt(0, Id, 0); }
  public static void AddWeight1(FlatBufferBuilder builder, VectorOffset Weight1Offset) { builder.AddOffset(1, Weight1Offset.Value, 0); }
  public static VectorOffset CreateWeight1Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateWeight1VectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartWeight1Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBuff1(FlatBufferBuilder builder, VectorOffset Buff1Offset) { builder.AddOffset(2, Buff1Offset.Value, 0); }
  public static VectorOffset CreateBuff1Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateBuff1VectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartBuff1Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddWeight2(FlatBufferBuilder builder, VectorOffset Weight2Offset) { builder.AddOffset(3, Weight2Offset.Value, 0); }
  public static VectorOffset CreateWeight2Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateWeight2VectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartWeight2Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBuff2(FlatBufferBuilder builder, VectorOffset Buff2Offset) { builder.AddOffset(4, Buff2Offset.Value, 0); }
  public static VectorOffset CreateBuff2Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateBuff2VectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartBuff2Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddWeight3(FlatBufferBuilder builder, VectorOffset Weight3Offset) { builder.AddOffset(5, Weight3Offset.Value, 0); }
  public static VectorOffset CreateWeight3Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateWeight3VectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartWeight3Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBuff3(FlatBufferBuilder builder, VectorOffset Buff3Offset) { builder.AddOffset(6, Buff3Offset.Value, 0); }
  public static VectorOffset CreateBuff3Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateBuff3VectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartBuff3Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddWeight4(FlatBufferBuilder builder, VectorOffset Weight4Offset) { builder.AddOffset(7, Weight4Offset.Value, 0); }
  public static VectorOffset CreateWeight4Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateWeight4VectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartWeight4Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBuff4(FlatBufferBuilder builder, VectorOffset Buff4Offset) { builder.AddOffset(8, Buff4Offset.Value, 0); }
  public static VectorOffset CreateBuff4Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateBuff4VectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartBuff4Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddWeight5(FlatBufferBuilder builder, VectorOffset Weight5Offset) { builder.AddOffset(9, Weight5Offset.Value, 0); }
  public static VectorOffset CreateWeight5Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateWeight5VectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartWeight5Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBuff5(FlatBufferBuilder builder, VectorOffset Buff5Offset) { builder.AddOffset(10, Buff5Offset.Value, 0); }
  public static VectorOffset CreateBuff5Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateBuff5VectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartBuff5Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddWeight6(FlatBufferBuilder builder, VectorOffset Weight6Offset) { builder.AddOffset(11, Weight6Offset.Value, 0); }
  public static VectorOffset CreateWeight6Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateWeight6VectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartWeight6Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBuff6(FlatBufferBuilder builder, VectorOffset Buff6Offset) { builder.AddOffset(12, Buff6Offset.Value, 0); }
  public static VectorOffset CreateBuff6Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateBuff6VectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartBuff6Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddWeight7(FlatBufferBuilder builder, VectorOffset Weight7Offset) { builder.AddOffset(13, Weight7Offset.Value, 0); }
  public static VectorOffset CreateWeight7Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateWeight7VectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartWeight7Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBuff7(FlatBufferBuilder builder, VectorOffset Buff7Offset) { builder.AddOffset(14, Buff7Offset.Value, 0); }
  public static VectorOffset CreateBuff7Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateBuff7VectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartBuff7Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddWeight8(FlatBufferBuilder builder, VectorOffset Weight8Offset) { builder.AddOffset(15, Weight8Offset.Value, 0); }
  public static VectorOffset CreateWeight8Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateWeight8VectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartWeight8Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBuff8(FlatBufferBuilder builder, VectorOffset Buff8Offset) { builder.AddOffset(16, Buff8Offset.Value, 0); }
  public static VectorOffset CreateBuff8Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateBuff8VectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartBuff8Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddWeight9(FlatBufferBuilder builder, VectorOffset Weight9Offset) { builder.AddOffset(17, Weight9Offset.Value, 0); }
  public static VectorOffset CreateWeight9Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateWeight9VectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartWeight9Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBuff9(FlatBufferBuilder builder, VectorOffset Buff9Offset) { builder.AddOffset(18, Buff9Offset.Value, 0); }
  public static VectorOffset CreateBuff9Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateBuff9VectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartBuff9Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<GameConfigs.EntryRowData> EndEntryRowData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GameConfigs.EntryRowData>(o);
  }
};

public struct Entry : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static Entry GetRootAsEntry(ByteBuffer _bb) { return GetRootAsEntry(_bb, new Entry()); }
  public static Entry GetRootAsEntry(ByteBuffer _bb, Entry obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Entry __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GameConfigs.EntryRowData? Datalist(int j) { int o = __p.__offset(4); return o != 0 ? (GameConfigs.EntryRowData?)(new GameConfigs.EntryRowData()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int DatalistLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<GameConfigs.Entry> CreateEntry(FlatBufferBuilder builder,
      VectorOffset datalistOffset = default(VectorOffset)) {
    builder.StartTable(1);
    Entry.AddDatalist(builder, datalistOffset);
    return Entry.EndEntry(builder);
  }

  public static void StartEntry(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddDatalist(FlatBufferBuilder builder, VectorOffset datalistOffset) { builder.AddOffset(0, datalistOffset.Value, 0); }
  public static VectorOffset CreateDatalistVector(FlatBufferBuilder builder, Offset<GameConfigs.EntryRowData>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateDatalistVectorBlock(FlatBufferBuilder builder, Offset<GameConfigs.EntryRowData>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartDatalistVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<GameConfigs.Entry> EndEntry(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GameConfigs.Entry>(o);
  }
  public static void FinishEntryBuffer(FlatBufferBuilder builder, Offset<GameConfigs.Entry> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedEntryBuffer(FlatBufferBuilder builder, Offset<GameConfigs.Entry> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
