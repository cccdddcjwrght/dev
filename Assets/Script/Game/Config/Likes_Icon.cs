// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace GameConfigs
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct Likes_IconRowData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static Likes_IconRowData GetRootAsLikes_IconRowData(ByteBuffer _bb) { return GetRootAsLikes_IconRowData(_bb, new Likes_IconRowData()); }
  public static Likes_IconRowData GetRootAsLikes_IconRowData(ByteBuffer _bb, Likes_IconRowData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Likes_IconRowData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Icon { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetIconBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetIconArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<GameConfigs.Likes_IconRowData> CreateLikes_IconRowData(FlatBufferBuilder builder,
      int Id = 0,
      StringOffset IconOffset = default(StringOffset)) {
    builder.StartTable(2);
    Likes_IconRowData.AddIcon(builder, IconOffset);
    Likes_IconRowData.AddId(builder, Id);
    return Likes_IconRowData.EndLikes_IconRowData(builder);
  }

  public static void StartLikes_IconRowData(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddId(FlatBufferBuilder builder, int Id) { builder.AddInt(0, Id, 0); }
  public static void AddIcon(FlatBufferBuilder builder, StringOffset IconOffset) { builder.AddOffset(1, IconOffset.Value, 0); }
  public static Offset<GameConfigs.Likes_IconRowData> EndLikes_IconRowData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GameConfigs.Likes_IconRowData>(o);
  }
};

public struct Likes_Icon : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static Likes_Icon GetRootAsLikes_Icon(ByteBuffer _bb) { return GetRootAsLikes_Icon(_bb, new Likes_Icon()); }
  public static Likes_Icon GetRootAsLikes_Icon(ByteBuffer _bb, Likes_Icon obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Likes_Icon __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public GameConfigs.Likes_IconRowData? Datalist(int j) { int o = __p.__offset(4); return o != 0 ? (GameConfigs.Likes_IconRowData?)(new GameConfigs.Likes_IconRowData()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int DatalistLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<GameConfigs.Likes_Icon> CreateLikes_Icon(FlatBufferBuilder builder,
      VectorOffset datalistOffset = default(VectorOffset)) {
    builder.StartTable(1);
    Likes_Icon.AddDatalist(builder, datalistOffset);
    return Likes_Icon.EndLikes_Icon(builder);
  }

  public static void StartLikes_Icon(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddDatalist(FlatBufferBuilder builder, VectorOffset datalistOffset) { builder.AddOffset(0, datalistOffset.Value, 0); }
  public static VectorOffset CreateDatalistVector(FlatBufferBuilder builder, Offset<GameConfigs.Likes_IconRowData>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateDatalistVectorBlock(FlatBufferBuilder builder, Offset<GameConfigs.Likes_IconRowData>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartDatalistVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<GameConfigs.Likes_Icon> EndLikes_Icon(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<GameConfigs.Likes_Icon>(o);
  }
  public static void FinishLikes_IconBuffer(FlatBufferBuilder builder, Offset<GameConfigs.Likes_Icon> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedLikes_IconBuffer(FlatBufferBuilder builder, Offset<GameConfigs.Likes_Icon> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
